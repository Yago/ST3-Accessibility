{
	"js_completions": [
		["angular\tAccessbility", "angular"],
		["$animate\tAccessbility", "\\$animate"],
		["$animateProvider\tAccessbility", "\\$animateProvider"],
		["$cacheFactory\tAccessbility", "\\$cacheFactory(${1:cacheId}${2:, ${3:options}})"],
		["$compile\tAccessbility", "\\$compile(${1:element}, ${2:transclude}, ${3:maxPriority})"],
		["$compileProvider\tAccessbility", "\\$compileProvider"],
		["$controller\tAccessbility", "\\$controller(${1:constructor}, ${2:locals})"],
		["$controllerProvider\tAccessbility", "\\$controllerProvider"],
		["$exceptionHandler\tAccessbility", "\\$exceptionHandler(${1:exception}${2:, ${3:cause}})"],
		["$exceptionHandlerProvider\tAccessbility", "\\$exceptionHandlerProvider"],
		["$filter\tAccessbility", "\\$filter(${1:name})"],
		["$filterProvider\tAccessbility", "\\$filterProvider"],
		["$http\tAccessbility", "\\$http"],
		["$httpBackend\tAccessbility", "\\$httpBackend"],
		["$injector\tAccessbility", "\\$injector"],
		["$interpolate\tAccessbility", "\\$interpolate(${1:text}${2:, ${3:mustHaveExpression}${4:, ${5:trustedContext}}})"],
		["$interpolateProvider\tAccessbility", "\\$interpolateProvider"],
		["$interval\tAccessbility", "\\$interval"],
		["$locale\tAccessbility", "\\$locale"],
		["$location\tAccessbility", "\\$location"],
		["$locationProvider\tAccessbility", "\\$locationProvider"],
		["$log\tAccessbility", "\\$log"],
		["$logProvider\tAccessbility", "\\$logProvider"],
		["$parse\tAccessbility", "\\$parse(${1:expression})"],
		["$parseProvider\tAccessbility", "\\$parseProvider"],
		["$provide\tAccessbility", "\\$provide"],
		["$q\tAccessbility", "\\$q"],
		["$rootElement\tAccessbility", "\\$rootElement"],
		["$rootScope\tAccessbility", "\\$rootScope"],
		["$rootScopeProvider\tAccessbility", "\\$rootScopeProvider"],
		["$sce\tAccessbility", "\\$sce"],
		["$sceDelegate\tAccessbility", "\\$sceDelegate"],
		["$sceDelegateProvider\tAccessbility", "\\$sceDelegateProvider"],
		["$sceProvider\tAccessbility", "\\$sceProvider"],
		["$scope\tAccessbility", "\\$scope"],
		["$templateCache\tAccessbility", "\\$templateCache"],
		["$timeout\tAccessbility", "\\$timeout"],
		["$window\tAccessbility", "\\$window"],

		["$cookies\tAccessbility", "\\$cookies"],
		["$cookieStore\tAccessbility", "\\$cookieStore"],

		["$resource\tAccessbility", "\\$resource(${1:url}${2:, ${3:paramDefaults}${4:, ${5:actions}}})"],

		["$route\tAccessbility", "\\$route"],
		["$routeParams\tAccessbility", "\\$routeParams"],
		["$routeProvider\tAccessbility", "\\$routeProvider"],

		["$sanitize\tAccessbility", "\\$sanitize(${1:html})"],

		["$swipe\tAccessbility", "\\$swipe"],
		
		["verbose_$http\tAccessbility", "\\$http('${1:GET|POST|PUT|DELETE}', ${2:url}${3:, ${4:post}}, ${5:function(status, response){\n\t${6:// success}\n}}${7:, function(status, response){\n\t${8:// error}\n}});"],
		["verbose_$filter\tAccessbility", "\\$filter('${1:currency|date|filter|json|limitTo|linky|lowercase|number|orderBy|uppercase}')(${2:array}${3:, ${4:expression}});"],
		["verbose_$interval\tAccessbility", "\\$interval(${1:fn}${2:, ${3:delay}${4:, ${5:count}}${6:, ${7:invokeApply}}})"],
		["verbose_$timeout\tAccessbility", "\\$timeout(${1:function()\\{\n\t$2\n\\}}, ${3:delay});"],
		["verbose_directive\tAccessbility", "directive('$1', [${3:'$4', }function($4){\n\t${5:// Runs during compile}\n\treturn {\n\t\t// name: '',\n\t\t// priority: 1,\n\t\t// terminal: true,\n\t\t// scope: {}, // {} = isolate, true = child, false/undefined = no change\n\t\t// controller: function(\\$scope, \\$element, \\$attrs, \\$transclude) {},\n\t\t// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements\n\t\t// restrict: 'A', // E = Element, A = Attribute, C = Class, M = Comment\n\t\t// template: '',\n\t\t// templateUrl: '',\n\t\t// replace: true,\n\t\t// transclude: true,\n\t\t// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),\n\t\tlink: function(\\$scope, iElm, iAttrs, controller) {\n\t\t\t$0\n\t\t}\n\t};\n}]);"],
		["verbose_module\tAccessbility", "/**\n* $1 Module\n*\n* ${2:Description}\n*/\nangular.module('$1', [$3]).$0"],

		["config\tAccessbility", "config([${1:'$2',}function($2) {\n\t$3\n}])"],
		["constant\tAccessbility", "constant('${1:name}', ${2:value})"],
		["controller\tAccessbility", "controller('${1:name}', [${2:'$3', }function($3){\n\t$4\n}])"],
		["factory\tAccessbility", "factory('${1:name}', [${2:'$3', }function($3){\n\treturn function ${4:name}(){\n\t\t$5\n\t};\n}])"],
		["run\tAccessbility", "run('${1:name}', [${2:'$3', }function($3){\n\t$4\n}])"],
		["service\tAccessbility", "service('${1:name}', [${2:'$3', }function($3){\n\t$4\n}])"],
		["value\tAccessbility", "value('${1:name}', ${2:value})"]
	],
	"angular": [
		["bind\tAccessbility", "bind(${1:self}, ${2:fn}, ${3:args})"],
		["bootstrap\tAccessbility", "bootstrap(${1:element}${2:, ${3:modules}})"],
		["copy\tAccessbility", "copy(${1:source}${2:, ${3:destination}})"],
		["element\tAccessbility", "element(${1:element});"],
		["equals\tAccessbility", "equals(${1:object1}, ${2:object2});"],
		["extend\tAccessbility", "extend(${1:destinationObject}, ${2:sourceObject})"],
		["forEach\tAccessbility", "forEach(${1:values}, function(${2:value}, ${3:key}){\n\t$0\n});"],
		["fromJson\tAccessbility", "fromJson(${1:json})"],
		["identity\tAccessbility", "identity()"],
		["injector\tAccessbility", "injector(${1:modules})"],
		["isArray\tAccessbility", "isArray(${1:value})"],
		["isDate\tAccessbility", "isDate(${1:value})"],
		["isDefined\tAccessbility", "isDefined(${1:value})"],
		["isElement\tAccessbility", "isElement(${1:value})"],
		["isFunction\tAccessbility", "isFunction(${1:value})"],
		["isNumber\tAccessbility", "isNumber(${1:value})"],
		["isObject\tAccessbility", "isObject(${1:value})"],
		["isString\tAccessbility", "isString(${1:value})"],
		["isUndefined\tAccessbility", "isUndefined(${1:value})"],
		["lowercase\tAccessbility", "lowercase(${1:string});"],
		["mock\tAccessbility", "mock"],
		["module\tAccessbility", "module('$1', [$2])"],
		["noop\tAccessbility", "noop"],
		["toJson\tAccessbility", "toJson(${1})"],
		["uppercase\tAccessbility", "uppercase(${1:string});"],
		["version\tAccessbility", "version"]
	],
	"$animate": [
		["addClass\tAccessbility", "addClass(${1:element}, ${2:className}, ${3:done})"],
		["enter\tAccessbility", "enter(${1:element}, ${2:parent}, ${3:after}, ${4:done})"],
		["leave\tAccessbility", "leave(${1:element}, ${2:done})"],
		["move\tAccessbility", "move(${1:element}, ${2:parent}, ${3:after}, ${4:done})"],
		["removeClass\tAccessbility", "removeClass(${1:element}, ${2:className}, ${3:done})"]
	],
	"$animateProvider": [
		["classNameFilter\tAccessbility", "classNameFilter(${1:expression})"],
		["register\tAccessbility", "register(${1:name}, ${2:factory})"]
	],
	"$compileProvider": [
		["aHrefSanitizationWhitelist\tAccessbility", "aHrefSanitizationWhitelist(${1:regexp})"],
		["directive\tAccessbility", "directive(${1:name}${2:, ${3:directiveFactory}})"],
		["imgSrcSanitizationWhitelist\tAccessbility", "imgSrcSanitizationWhitelist(${1:regexp})"]
	],
	"$controllerProvider": [
		["register\tAccessbility", "register(${1:name}${2:, ${3:constructor}})"]
	],
	"$exceptionHandlerProvider": [
		["mode\tAccessbility (M)", "mode(${1:mode})"]
	],
	"$filterProvider": [
		["register\tAccessbility", "register(${1:name}, ${2:fn})"]
	],
	"$http": [
		["delete\tAccessbility", "delete(${1:url}${2:, ${3:config}})"],
		["get\tAccessbility", "get(${1:url}${2:, ${3:config}})"],
		["head\tAccessbility", "head(${1:url}${2:, ${3:config}})"],
		["jsonp\tAccessbility", "jsonp(${1:url}${2:, ${3:config}})"],
		["post\tAccessbility", "post(${1:url}, ${2:data}${3:, ${4:config}})"],
		["put\tAccessbility", "put(${1:url}, ${2:data}${3:, ${4:config}})"],
		["defaults\tAccessbility", "defaults"],
		["pendingRequests\tAccessbility", "pendingRequests"]
	],
	"$httpBackend": [
		["expect\tAccessbility (M)", "expect(${1:method}, ${2:url}${3:, ${4:data}${5:, ${6:headers}}})"],
		["expectDELETE\tAccessbility (M)", "expectDELETE(${1:url}${2:, ${3:headers}})"],
		["expectGET\tAccessbility (M)", "expectGET(${1:url}${2:, ${3:headers}})"],
		["expectHEAD\tAccessbility (M)", "expectHEAD(${1:url}${2:, ${3:headers}})"],
		["expectJSONP\tAccessbility (M)", "expectJSONP(url)"],
		["expectPATCH\tAccessbility (M)", "expectPATCH(${1:url}${2:, ${3:data}${4:, ${5:headers}}})"],
		["expectPOST\tAccessbility (M)", "expectPOST(${1:url}${2:, ${3:data}${4:, ${5:headers}}})"],
		["expectPUT\tAccessbility (M)", "expectPUT(${1:url}${2:, ${3:data}${4:, ${5:headers}}})"],
		["flush\tAccessbility (M)", "flush(${1:count})"],
		["resetExpectations\tAccessbility (M)", "resetExpectations()"],
		["verifyNoOutstandingExpectation\tAccessbility (M)", "verifyNoOutstandingExpectation()"],
		["verifyNoOutstandingRequest\tAccessbility (M)", "verifyNoOutstandingRequest()"],
		["when\tAccessbility (M/E2E)", "when(${1:method}, ${2:url}${3:, ${4:data}${5:, ${6:headers}}})"],
		["whenDELETE\tAccessbility (M/E2E)", "whenDELETE(${1:url}${2:, ${3:headers}})"],
		["whenGET\tAccessbility (M/E2E)", "whenGET(${1:url}${2:, ${3:headers}})"],
		["whenHEAD\tAccessbility (M/E2E)", "whenHEAD(${1:url}${2:, ${3:headers}})"],
		["whenJSONP\tAccessbility (M/E2E)", "whenJSONP(url)"],
		["whenPOST\tAccessbility (M/E2E)", "whenPOST(${1:url}${2:, ${3:data}${4:, ${5:headers}}})"],
		["whenPUT\tAccessbility (M/E2E)", "whenPUT(${1:url}${2:, ${3:data}${4:, ${5:headers}}})"]
	],
	"$injector": [
		["annotate\tAccessbility", "annotate(${1:fn})"],
		["get\tAccessbility", "get(${1:name})"],
		["has\tAccessbility", "has(${1:name})"],
		["instantiate\tAccessbility", "instantiate(${1:Type}${2:, ${3:locals}})"],
		["invoke\tAccessbility", "invoke(${1:fn}${2:, ${3:self}${4:, ${5:locals}}})"]
	],
	"$interpolateProvider": [
		["endSymbol\tAccessbility", "endSymbol(${1:value})"],
		["startSymbol\tAccessbility", "startSymbol(${1:value})"]
	],
	"$interval": [
		["cancel\tAccessbility", "cancel(${1:promise})"],
		["flush\tAccessbility (M)", "flush(${1:millis})"]
	],
	"$locale": [
		["id\tAccessbility", "id"]
	],
	"$location": [
		["absUrl\tAccessbility", "absUrl()"],
		["hash\tAccessbility", "hash(${1:hash})"],
		["host\tAccessbility", "host()"],
		["path\tAccessbility", "path(${1:path})"],
		["port\tAccessbility", "port()"],
		["protocol\tAccessbility", "protocol()"],
		["replace\tAccessbility", "replace()"],
		["search\tAccessbility", "search(${1:search}${2:, ${3:paramValue}})"],
		["url\tAccessbility", "url(${1:${2:url}${3:, ${4:replace}}})"]
	],
	"$locationProvider": [
		["hashPrefix\tAccessbility", "hashPrefix(${1:prefix})"],
		["html5Mode\tAccessbility", "html5Mode(${1:true})"]
	],
	"$log": [
		["debug\tAccessbility", "debug()"],
		["error\tAccessbility", "error()"],
		["info\tAccessbility", "info()"],
		["log\tAccessbility", "log()"],
		["warn\tAccessbility", "warn()"],
		["assertEmpty\tAccessbility (M)", "assertEmpty()"],
		["reset\tAccessbility (M)", "reset()"]
	],
	"$logProvider": [
		["debugEnabled\tAccessbility", "debugEnabled(${1:true})"]
	],
	"$parseProvider": [
		["logPromiseWarnings\tAccessbility", "logPromiseWarnings(${1:false})"],
		["unwrapPromises\tAccessbility", "unwrapPromises(${1:true})"]
	],
	"$provide": [
		["constant\tAccessbility", "constant(${1:name}, ${2:value})"],
		["decorator\tAccessbility", "decorator(${1:name}, ['\\$delegate', function(\\$delegate){\n\t$2\n\treturn \\$delegate\n}])"],
		["factory\tAccessbility", "factory(${1:name}, [${2:'$3', }function($3){\n\treturn function ${4:name}(){\n\t\t$5\n\t};\n}])"],
		["provider\tAccessbility", "provider(${1:name}, ${2:provider})"],
		["service\tAccessbility", "service(${1:name}, ${2:constructor})"],
		["value\tAccessbility", "value(${1:name}, ${2:value})"]

	],
	"$q": [
		["all\tAccessbility", "all(${1:promises})"],
		["defer\tAccessbility", "defer()"],
		["reject\tAccessbility", "reject(${1:reason})"],
		["when\tAccessbility", "when(${1:value})"]
	],
	"$rootScope": "_scopes",
	"$scope": "_scopes",
	"_scopes": [
		["$apply\tAccessbility", "\\$apply(${1:exp})"],
		["$broadcast\tAccessbility", "\\$broadcast(${1:name}, ${2:args})"],
		["$destroy\tAccessbility", "\\$destroy()"],
		["$digest\tAccessbility", "\\$digest()"],
		["$emit\tAccessbility", "\\$emit(${1:name}, ${2:args})"],
		["$eval\tAccessbility", "\\$eval(${1:${2:expression}${3:, ${4:locals}}})"],
		["$evalAsync\tAccessbility", "\\$evalAsync(${1:expression})"],
		["$new\tAccessbility", "\\$new(${1:isolate})"],
		["$on\tAccessbility", "\\$on('${1:name}', ${2:function(){$3}});"],
		["$parent\tAccessbility", "\\$parent."],
		["$root\tAccessbility", "\\$root."],
		["$watch\tAccessbility", "\\$watch('${1:watchExpression}', function(newValue, oldValue, scope) {\n\t$2\n}${3:, ${4:objectEquality}});"],
		// ["$watch\tAccessbility", "\\$watch(${1:watchExpression}${2:, ${3:listener}${4:, ${5:objectEquality}}})"],
		["$watchCollection\tAccessbility", "\\$watchCollection(${1:obj}, function(newCollection, oldCollection, scope) {\n\t$2\n});"],
		["$id\tAccessbility", "\\$id"]
	],
	"$rootScopeProvider": [
		["digestTtl\tAccessbility", "digestTtl(${1:limit})"]
	],
	"$sce": [
		["getTrusted\tAccessbility", "getTrusted(${1:type}, ${2:maybeTrusted})"],
		["getTrustedCss\tAccessbility", "getTrustedCss(${1:value})"],
		["getTrustedHtml\tAccessbility", "getTrustedHtml(${1:value})"],
		["getTrustedJs\tAccessbility", "getTrustedJs(${1:value})"],
		["getTrustedResourceUrl\tAccessbility", "getTrustedResourceUrl(${1:value})"],
		["getTrustedUrl\tAccessbility", "getTrustedUrl(${1:value})"],
		["parse\tAccessbility", "parse(${1:type}, ${2:expression})"],
		["parseAsCss\tAccessbility", "parseAsCss(${1:expression})"],
		["parseAsHtml\tAccessbility", "parseAsHtml(${1:expression})"],
		["parseAsJs\tAccessbility", "parseAsJs(${1:expression})"],
		["parseAsResourceUrl\tAccessbility", "parseAsResourceUrl(${1:expression})"],
		["parseAsUrl\tAccessbility", "parseAsUrl(${1:expression})"],
		["trustAs\tAccessbility", "trustAs(${1:type}, ${2:value})"],
		["trustAsHtml\tAccessbility", "trustAsHtml(${1:value})"],
		["trustAsJs\tAccessbility", "trustAsJs(${1:value})"],
		["trustAsResourceUrl\tAccessbility", "trustAsResourceUrl(${1:value})"],
		["trustAsUrl\tAccessbility", "trustAsUrl(${1:value})"],
		["isEnabled\tAccessbility", "isEnabled()"]
	],
	"$sceDelegate": [
		["getTrusted\tAccessbility", "getTrusted(${1:type}, ${2:maybeTrusted})"],
		["trustAs\tAccessbility", "trustAs(${1:type}, ${2:value})"],
		["valueOf\tAccessbility", "valueOf(${1:value})"]
	],
	"$sceDelegateProvider": [
		["resourceUrlBlacklist\tAccessbility", "resourceUrlBlacklist(${1:blacklist})"],
		["resourceUrlWhitelist\tAccessbility", "resourceUrlWhitelist(${1:whitelist})"]
	],
	"$sceProvider": [
		["enabled\tAccessbility", "enabled(${1:value})"]
	],
	"$timeout": [
		["cancel\tAccessbility", "cancel(${1:promise})"],
		["flush\tAccessbility (M)", "flush(${1:delay})"]
	],
	"$cookieStore": [
		["get\tAccessbility", "get(${1:key})"],
		["put\tAccessbility", "put(${1:key}, ${2:value})"],
		["remove\tAccessbility", "remove(${1:key})"]
	],
	"$route": [
		["reload\tAccessbility", "reload()"],
		["current\tAccessbility", "current"],
		["routes\tAccessbility", "routes"]
	],
	"$routeProvider": [
		["otherwise\tAccessbility", "otherwise(${1:params})"],
		["when\tAccessbility", "when(${1:path}, ${2:route})"]
	],
	"$swipe": [
		["bind\tAccessbility", "bind(${1:element})"]
	],
	"mock": [
		["dump\tAccessbility", "dump(${1:object})"],
		["module\tAccessbility", "module(${1:fns})"]
	],
	"events": [
		["$locationChangeStart\tAccessbility (E)", "\\$locationChangeStart"],
		["$locationChangeSuccess\tAccessbility (E)", "\\$locationChangeSuccess"],
		["$destroy\tAccessbility (E)", "\\$destroy"],
		["$includeContentLoaded\tAccessbility (E)", "\\$includeContentLoaded"],
		["$includeContentRequested\tAccessbility (E)", "\\$includeContentRequested"],
		["$routeChangeError\tAccessbility (E)", "\\$routeChangeError"],
		["$routeChangeStart\tAccessbility (E)", "\\$routeChangeStart"],
		["$routeChangeSuccess\tAccessbility (E)", "\\$routeChangeSuccess"],
		["$routeUpdate\tAccessbility (E)", "\\$routeUpdate"],
		["$viewContentLoaded\tAccessbility (E)", "\\$viewContentLoaded"]
	],
	"attrs": [
		["$addClass\tAccessbility", "\\$addClass(${1:classVal})"],
		["$observe\tAccessbility", "\\$observe(${1:key}, ${2:fn})"],
		["$removeClass\tAccessbility", "\\$removeClass(${1:classVal})"],
		["$set\tAccessbility", "\\$set(${1:name}, ${2:value})"],
		["$updateClass\tAccessbility", "\\$updateClass(newClasses, oldClasses)"],
		["$attr\tAccessbility", "\\$attr"]
	]
}
